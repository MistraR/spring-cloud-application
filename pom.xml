<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mistra</groupId>
    <artifactId>springCloudApplication</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>base</module>
        <module>eurekaserver</module>
        <module>configserver</module>
        <module>monitorserver</module>
        <module>userservice</module>
        <module>uaaservice</module>
        <module>routeservice</module>
        <module>adminserver</module>
        <module>excelservice</module>
        <module>utilservice</module>
        <module>adminserver</module>
        <module>redisserver</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.5.RELEASE</version>
    </parent>

    <properties>
        <mybatisplus-spring-boot-starter.version>3.0.7.1</mybatisplus-spring-boot-starter.version>
        <spring-boot-starter-thymeleaf>2.2.7.RELEASE</spring-boot-starter-thymeleaf>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-cloud-starter-hystrix>1.4.7.RELEASE</spring-cloud-starter-hystrix>
        <spring-boot-starter-actuator>2.2.7.RELEASE</spring-boot-starter-actuator>
        <hibernate.validator.version>6.1.0.Final</hibernate.validator.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jackson-databind.version>2.11.0</jackson-databind.version>
        <spring-cloud.version>Hoxton.SR4</spring-cloud.version>
        <mybatis.srping.version>2.1.2</mybatis.srping.version>
        <thymeleaf-spring5>3.0.11.RELEASE</thymeleaf-spring5>
        <commons.lang3.version>3.10</commons.lang3.version>
        <txlcn-tc.version>5.0.2.RELEASE</txlcn-tc.version>
        <spring-aspects>5.2.6.RELEASE</spring-aspects>
        <swagger2.version>2.9.2</swagger2.version>
        <druid.version>1.1.22</druid.version>
        <shiro.version>1.7.1</shiro.version>
        <java.version>1.8</java.version>
        <jersey-hk2>2.27</jersey-hk2>
        <java-jwt>3.4.0</java-jwt>
        <lombok>1.18.2</lombok>
        <mailgun>1.9.0</mailgun>
        <greenmail>1.5.9</greenmail>
        <junit>4.13.2</junit>
        <modelmapper>2.2.0</modelmapper>
        <hutool-core>5.3.4</hutool-core>
        <slf4j-api>1.8.0-beta2</slf4j-api>
        <okhttp.version>4.0.1</okhttp.version>
        <poi-ooxml.version>3.17</poi-ooxml.version>
        <eureka-client>2.2.2.RELEASE</eureka-client>
        <netflix-ribbon>2.0.1.RELEASE</netflix-ribbon>
        <jolokia-core.version>1.6.0</jolokia-core.version>
        <com.alibaba.fastjson>1.2.68</com.alibaba.fastjson>
        <mysql-connector-java>5.1.46</mysql-connector-java>
        <spring-kafka.version>2.4.6.RELEASE</spring-kafka.version>
        <spring-boot-starter-web>2.5.12</spring-boot-starter-web>
        <spring-boot-starter-mail>2.2.7.RELEASE</spring-boot-starter-mail>
        <spring-cloud-starter-feign>1.4.7.RELEASE</spring-cloud-starter-feign>
        <pagehelper-spring-boot-starter>1.2.5</pagehelper-spring-boot-starter>
        <spring-boot-admin-starter-client>2.1.0</spring-boot-admin-starter-client>
        <spring-boot-admin-starter-server>2.1.0</spring-boot-admin-starter-server>
        <spring-boot-starter-security>2.2.6.RELEASE</spring-boot-starter-security>
        <spring-boot-starter-data-redis>2.2.7.RELEASE</spring-boot-starter-data-redis>
        <spring-cloud-starter-hystrix-dashboard>1.4.5.RELEASE</spring-cloud-starter-hystrix-dashboard>
    </properties>

    <dependencies>
        <!--若在这添加的依赖，子模块会自动继承这些依赖-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot-starter-web}</version>
        </dependency>
    </dependencies>

    <!--
    dependencyManagement的作用其实相当于一个对所依赖jar包进行版本管理的管理器。
    如果dependencies里的dependency自己没有声明version元素，那么maven就会到dependencyManagement里面去找有没有对该artifactId和groupId进行过版本声明，如果有，就继承它，如果
    没有就会报错，告诉你必须为dependency声明一个version
    如果dependencies中的dependency声明了version，那么无论dependencyManagement中有无对该jar的version声明，都以dependency里的version为准。
    整个项目的所有依赖包版本在这里维护，子模块需要用到那个依赖就在pom直接添加上，但是不需要再写version了-->
    <dependencyManagement>
        <dependencies>
            <!--config model依赖,可能被其他模块引用的模块都应该添加进来-->
            <dependency>
                <groupId>com.mistra</groupId>
                <artifactId>base</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <!--userservice model依赖-->
            <dependency>
                <groupId>com.mistra</groupId>
                <artifactId>userservice</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <!--uaaservice model依赖-->
            <dependency>
                <groupId>com.mistra</groupId>
                <artifactId>uaaservice</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.srping.version}</version>
            </dependency>
            <!--hibernate-->
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
            <!--druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!--swagger-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <!--mybatis-plus-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatisplus-spring-boot-starter.version}</version>
            </dependency>
            <!--mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java}</version>
            </dependency>
            <!--shiro-->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-ehcache</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring-aspects}</version>
            </dependency>
            <!--jwt-->
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt}</version>
            </dependency>
            <!--poi-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi-ooxml.version}</version>
            </dependency>
            <!--okhttp-->
            <!--            <dependency>-->
            <!--                <groupId>com.squareup.okhttp3</groupId>-->
            <!--                <artifactId>okhttp</artifactId>-->
            <!--                <version>${okhttp.version}</version>-->
            <!--            </dependency>-->
            <!--jolokia-->
            <dependency>
                <groupId>org.jolokia</groupId>
                <artifactId>jolokia-core</artifactId>
                <version>${jolokia-core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${eureka-client}</version>
            </dependency>
            <!--feign-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-feign</artifactId>
                <version>${spring-cloud-starter-feign}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot-starter-security}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot-starter-actuator}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix-dashboard</artifactId>
                <version>${spring-cloud-starter-hystrix-dashboard}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix</artifactId>
                <version>${spring-cloud-starter-hystrix}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin-starter-client}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin-starter-server}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-server-ui</artifactId>
                <version>${spring-boot-admin-starter-server}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
                <version>${netflix-ribbon}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--  modelmapper  -->
            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper}</version>
            </dependency>
            <!--  lombok  -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok}</version>
                <scope>provided</scope>
            </dependency>
            <!-- 丰富的Java工具包 -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-core</artifactId>
                <version>${hutool-core}</version>
            </dependency>
            <!-- github.pagehelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter}</version>
            </dependency>
            <!-- slf4j -->
            <!--<dependency>-->
            <!--<groupId>org.slf4j</groupId>-->
            <!--<artifactId>slf4j-api</artifactId>-->
            <!--<version>${slf4j-api}</version>-->
            <!--</dependency>-->
            <!--mail-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>${spring-boot-starter-mail}</version>
            </dependency>
            <!--kafka-->
            <dependency>
                <groupId>org.springframework.kafka</groupId>
                <artifactId>spring-kafka</artifactId>
                <version>${spring-kafka.version}</version>
            </dependency>
            <!--mail测试-->
            <!--<dependency>-->
            <!--<groupId>com.icegreen</groupId>-->
            <!--<artifactId>greenmail</artifactId>-->
            <!--<version>1.5.5</version>-->
            <!--<scope>test</scope>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${spring-boot-starter-thymeleaf}</version>
            </dependency>
            <dependency>
                <groupId>org.thymeleaf</groupId>
                <artifactId>thymeleaf-spring5</artifactId>
                <version>${thymeleaf-spring5}</version>
            </dependency>
            <dependency>
                <groupId>net.sargue</groupId>
                <artifactId>mailgun</artifactId>
                <version>${mailgun}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey-hk2}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${spring-boot-starter-data-redis}</version>
            </dependency>
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>3.3.0</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${com.alibaba.fastjson}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <!-- 分布式事物框架TX-LCN-->
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-tc</artifactId>
                <version>${txlcn-tc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.codingapi.txlcn</groupId>
                <artifactId>txlcn-txmsg-netty</artifactId>
                <version>${txlcn-tc.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.0.1.RELEASE</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>